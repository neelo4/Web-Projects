import React, { useState } from 'react';

type ShowPhoneNumberProps = {
  maskedNumber: string;
  unmaskedNumber: string;
};

const ShowPhoneNumber: React.FC<ShowPhoneNumberProps> = ({ maskedNumber, unmaskedNumber }) => {
  const [isVisible, setIsVisible] = useState(false);
  const [showLink, setShowLink] = useState(true);

  const handleShowNumber = (e: React.MouseEvent) => {
    e.preventDefault();
    setIsVisible(true);
    setShowLink(false);
  };

  return (
    <span className="inline-flex items-center">
      <a href={`tel:${unmaskedNumber.replace(/\s/g, '')}`} className="text-blue-600">
        {isVisible ? unmaskedNumber : maskedNumber}
      </a>
      {showLink && (
        <button
          onClick={handleShowNumber}
          className="ml-1 text-blue-600 hover:text-blue-800 text-sm underline focus:outline-none"
        >
          Show number
        </button>
      )}
    </span>
  );
};

// Usage in PolicyStatusNotification component
const PolicyStatusNotification: React.FC<Props & BrandDataProps> = ({ t, tt, tExists, policy }) => {
  // ... existing code ...

  if (showPaymentOverdue && !boundRenewalAfterEffectiveDate) {
    return (
      <PolicyNotification
        type="warning"
        label={tt(paymentOverdueHeading)}
        subtext={
          <span>
            {tt('labels.paymentOverduePrefix')} {/* "If you want to make any changes to this policy before you pay, give us a call on" */}
            <ShowPhoneNumber
              maskedNumber="1300 XXX XXX"
              unmaskedNumber="1300 332 048"
            />
            {tt('labels.paymentOverdueSuffix')} {/* ". See our website for the times we're available." */}
          </span>
        }
      />
    );
  }

  // ... rest of existing code ...
};

export default connectIagBrand()(PolicyStatusNotification);
