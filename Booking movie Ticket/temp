const AlertElement: React.FC<Props> = (props) => {
  const { variant, className, trackingName, children, dataTealeafUnmask = false } = props;
  const trackingEventContext = useContext(SiteTrackingContext);

  // biome-ignore lint: existing behavior
  useEffect(() => {
    if (trackingName) {
      trackingEventContext.dispatch({
        interaction: Interaction.SHOW,
        element: {
          type: ElementType.ALERT,
          name: trackingName,
          subType: variant,
        },
      });
    }
  }, [trackingEventContext, trackingName]);

  // Helper function to process children with conditional check
  const processChildren = (childNodes: React.ReactNode): React.ReactNode => {
    if (!tExists('pages.callUs.showNumberText')) {
      return React.Children.map(childNodes, child => {
        if (React.isValidElement(child) && child.type === ShowPhoneNumber) {
          // Return null or alternate content for ShowPhoneNumber components
          return null;
        }
        return child;
      });
    }
    return childNodes;
  };

  return (
    <Alert variant={variant} className={className} {...getTealeafAttr(dataTealeafUnmask)}>
      {processChildren(children)}
    </Alert>
  );
};

export default AlertElement;
