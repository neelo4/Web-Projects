import React, { useState } from 'react';
import { trackingEventWrapper } from '../../../utils/trackingEventWrapper';
import { SiteTrackingContext } from '../../../utils/SiteTrackingContext';
import { ActionName, ElementType, Interaction } from '../../../models/tracking';
import { type BrandDataProps } from '@iag-common/iag-brand-context';
import NavigationLink from '../../../components/shared/NavigationLink';

type ShowPhoneNumberProps = {
  maskedNumber: string;
  unmaskedNumber: string;
} & BrandDataProps;

const ShowPhoneNumber: React.FC<ShowPhoneNumberProps> = ({ maskedNumber, unmaskedNumber, tt }) => {
  const [isVisible, setIsVisible] = useState(false);
  const [showLink, setShowLink] = useState(true);

  const trackingEventContext = React.useContext(SiteTrackingContext);
  const pageName = '/dashboard';

  const handleShowNumber = () => {
    console.log('ShowNumber button clicked');
    setIsVisible(true);
    setShowLink(false);

    trackingEventWrapper({
      trackingEventContext,
      pageName,
      details: {
        interaction: Interaction.CLICK,
        element: {
          name: ActionName.SHOW_NUMBER,
          type: ElementType.LINK,
          value: 'show-number'
        }
      }
    })();
  };

  const handleNumberClick = (e: React.MouseEvent) => {
    e.preventDefault();
    console.log('Number clicked');
    
    trackingEventWrapper({
      trackingEventContext,
      pageName,
      details: {
        interaction: Interaction.CLICK,
        element: {
          name: ActionName.CALL_US,
          type: ElementType.LINK,
          value: unmaskedNumber.replace(/\s/g, '-')
        }
      }
    })();
  };

  return (
    <span className="inline-flex items-center">
      {isVisible ? (
        <NavigationLink
          to={tt('constants.phoneNumbers.generalEnquiriesTellink')}
          onClick={handleNumberClick}
          newWindow={true}
          isInternalLink={true}
          className="text-blue-600 underline"
        >
          {unmaskedNumber}
        </NavigationLink>
      ) : (
        <>
          <span className="text-blue-600">{maskedNumber}</span>
          {showLink && (
            <button
              onClick={handleShowNumber}
              className="ml-1 text-blue-600 hover:text-blue-800 text-sm underline focus:outline-none"
              style={{ verticalAlign: 'baseline' }}
            >
              {tt('pages.callUs.showNumberText')}
            </button>
          )}
        </>
      )}
    </span>
  );
};

export default ShowPhoneNumber;
