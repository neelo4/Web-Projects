import React, { useState } from 'react';
import { useTranslation } from 'react-i18next';

interface PhoneLinkProps {
  className?: string;
  showMaskToggle?: boolean;
  initialMasked?: boolean;
  onClick?: (e: React.MouseEvent) => void;
  trackingData?: {
    pageName?: string;
    interaction?: string;
    elementName?: string;
    actionName?: string;
    elementType?: string;
  };
}

const PhoneLink: React.FC<PhoneLinkProps> = ({
  className = '',
  showMaskToggle = true,
  initialMasked = true,
  onClick,
  trackingData
}) => {
  const [isVisible, setIsVisible] = useState(!initialMasked);
  const { t } = useTranslation();

  const handleShowNumber = (e: React.MouseEvent) => {
    e.preventDefault();
    e.stopPropagation();
    setIsVisible(true);

    if (trackingData) {
      trackingEventContext?.dispatch({
        pageName: trackingData.pageName || PageName.EDIT_MOTOR_VEHICLE,
        interaction: trackingData.interaction || Interaction.CLICK,
        element: {
          name: trackingData.elementName || ElementName.CALL_US,
          value: trackingData.actionName || ActionName.SHOW_NUMBER,
          type: trackingData.elementType || ElementType.LINK
        }
      });
    }
  };

  const handlePhoneClick = (e: React.MouseEvent) => {
    if (onClick) {
      onClick(e);
    }
  };

  const phoneNumber = t('constants.phoneNumber');
  const displayNumber = t('constants.phoneNumberDisplay');
  const maskedNumber = t('constants.maskedPhoneNumber');

  return (
    <div className="inline-flex items-center gap-1">
      {showMaskToggle && !isVisible ? (
        <span className="inline-flex items-center gap-1">
          <Link
            href={`tel:${phoneNumber}`}
            onClick={handlePhoneClick}
            className={`${className || ''} btn-primary`}
          >
            {displayNumber}
          </Link>
          <button
            onClick={handleShowNumber}
            className={`${
              className ? className : 'text-white'
            } text-sm hover:text-blue-800 focus:outline-none underline`}
          >
            {maskedNumber}
          </button>
        </span>
      ) : (
        <Link
          href={`tel:${phoneNumber}`}
          onClick={handlePhoneClick}
          className={`${className || ''} btn-primary`}
        >
          {displayNumber}
        </Link>
      )}
    </div>
  );
};

export default PhoneLink;
