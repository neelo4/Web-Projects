import React, { useContext, useState } from 'react';
import { useTranslation } from 'react-i18next';
import { Link } from '@iag-packages/chroma-react/lib/components';
import { AnalyticsContext } from '../analytics/TrackingEventContext';
import { Interaction, ElementName, ElementType, ActionName } from '../../store/enums';
import { tExists } from '../../utils/i18nextUtil';

interface PhoneLinkProps {
    isButton?: boolean;
}

const PhoneLink: React.FC<PhoneLinkProps> = ({ isButton = false }) => {
    const { t } = useTranslation();
    const { trackingEventContext } = useContext(AnalyticsContext);
    const [isVisible, setIsVisible] = useState(false);

    const handlePhoneClick = () => {
        if (!isVisible && tExists('constants.showNumber')) return;
        
        trackingEventContext?.dispatch({
            interaction: Interaction.CLICK,
            element: {
                value: t('constants.phoneNumberDisplay').replaceAll(' ', '-'),
                name: ElementName.CALL_US,
                type: ElementType.LINK
            }
        });
    };

    const handleShowNumber = (e: React.MouseEvent) => {
        e.preventDefault();
        e.stopPropagation();
        setIsVisible(true);

        trackingEventContext?.dispatch({
            interaction: Interaction.CLICK,
            element: {
                name: ElementName.CALL_US,
                value: ActionName.SHOW_NUMBER,
                type: ElementType.LINK
            }
        });
    };

    return (
        <div className="inline-flex items-center gap-1">
            {isButton && 'Call '}
            {tExists('constants.showNumber') ? (
                <>
                    {isVisible ? (
                        <Link
                            href={`tel:${t('constants.phoneNumber')}`}
                            onClick={handlePhoneClick}
                            className={isButton ? 'btn-primary' : undefined}
                        >
                            {t('constants.phoneNumberDisplay')}
                        </Link>
                    ) : (
                        <span className="inline-flex items-center gap-1">
                            {t('constants.maskedPhoneNumber')}
                            <button
                                onClick={handleShowNumber}
                                className={`${
                                    isButton ? 'text-white' : 'text-blue-600'
                                } hover:text-blue-800 text-sm focus:outline-none underline`}
                            >
                                {t('constants.showNumber')}
                            </button>
                        </span>
                    )}
                </>
            ) : (
                // If showNumber doesn't exist, just display the phone number without masking
                <Link
                    href={`tel:${t('constants.phoneNumber')}`}
                    onClick={handlePhoneClick}
                    className={isButton ? 'btn-primary' : undefined}
                >
                    {t('constants.phoneNumberDisplay')}
                </Link>
            )}
        </div>
    );
};

export default PhoneLink;
