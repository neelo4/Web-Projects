import { screen } from '@testing-library/react';
import { act } from 'react-dom/test-utils';
import React from 'react';
import { render } from '../../../../test-utils/renderWithProviders';
import DigitalSetupPage from './DigitalSetupPage';
import { DOOTB_GOB_STEPS, DOOTB_ONBOARDING_TYPE } from '../../../components/shared/Constants';
import { exitOnboardingModule } from '../../../utils/onboardingModuleUtils';
import { PageName, Interaction, TransactionType, Activities, ElementType, ActionName } from '../../../models/SiteTracking';

// Mock router
const mockNavigate = jest.fn();
jest.mock('react-router-dom', () => ({
  ...jest.requireActual('react-router-dom'),
  useNavigate: () => mockNavigate,
}));

// Mock onboarding utils
jest.mock('../../../utils/onboardingModuleUtils', () => ({
  exitOnboardingModule: jest.fn(),
  triggerOnboardingSaveEDocsEvent: jest.fn(),
}));

// Mock tracking wrapper
const mockTrackingEventWrapper = jest.fn();
jest.mock('../../../sitetracking/TrackingEventWrapper', () => ({
  trackingEventWrapper: (...args: any) => mockTrackingEventWrapper(...args),
}));

describe('DigitalSetupPage - Extended Tests', () => {
  const mockHandleSubmit = jest.fn();
  const mockTrackingDispatch = jest.fn();
  
  beforeEach(() => {
    jest.clearAllMocks();
  });

  const renderWithContext = (onboardingType?: string, eDocsStatus = false, isEDocsRequestComplete = true) => {
    return render(
      <DigitalSetupPage 
        handleSubmit={mockHandleSubmit}
      />,
      {
        appContextValue: {
          appState: {
            onboardingAndEdocsResult: {
              onboardingType,
              eDocsStatus
            }
          }
        },
        siteTrackingContextValue: {
          dispatch: mockTrackingDispatch
        }
      }
    );
  };

  describe('callNextSteps functionality', () => {
    it('handles general onboarding completion correctly', () => {
      renderWithContext(DOOTB_ONBOARDING_TYPE.GENERAL_ONBOARDING);

      // Simulate form started
      act(() => {
        window.dispatchEvent(
          new CustomEvent('policy_corres_mgmt_mfe:checkbox_edocs', { 
            detail: { status: true } 
          })
        );
      });

      // Trigger completion
      act(() => {
        window.dispatchEvent(
          new CustomEvent('policy_corres_mgmt_mfe:save_edocs', {
            detail: { status: true, loadingStatus: false }
          })
        );
      });

      // Verify tracking event was dispatched
      expect(mockTrackingDispatch).toHaveBeenCalledWith({
        pageName: PageName.ONBOARDING_SETUP,
        interaction: Interaction.COMPLETE,
        data: {
          transactionType: TransactionType.DOOTB_ONBOARDING,
          transactionActivities: Activities.GENERAL_ONBOARDING,
        },
        element: {
          type: ElementType.FORM,
          name: ActionName.GENERAL_ONBOARDING,
        },
      });

      // Verify handleSubmit was called with correct step
      expect(mockHandleSubmit).toHaveBeenCalledWith(DOOTB_GOB_STEPS.NEXT_BEST_ACTION_PAGE);
    });

    it('handles migration onboarding completion correctly', () => {
      renderWithContext(DOOTB_ONBOARDING_TYPE.MIGRATION_ONBOARDING);

      // Simulate form started
      act(() => {
        window.dispatchEvent(
          new CustomEvent('policy_corres_mgmt_mfe:checkbox_edocs', { 
            detail: { status: true } 
          })
        );
      });

      // Trigger completion
      act(() => {
        window.dispatchEvent(
          new CustomEvent('policy_corres_mgmt_mfe:save_edocs', {
            detail: { status: true, loadingStatus: false }
          })
        );
      });

      // Verify tracking event was dispatched
      expect(mockTrackingDispatch).toHaveBeenCalledWith({
        pageName: PageName.ONBOARDING_SETUP,
        interaction: Interaction.COMPLETE,
        data: {
          transactionComplete: true,
          transactionType: TransactionType.DOOTB_ONBOARDING,
          transactionActivities: Activities.MIGRATION_ONBOARDING,
        },
        element: {
          type: ElementType.FORM,
          name: ActionName.MIGRATION_ONBOARDING,
        },
      });

      // Verify navigation and exit
      expect(exitOnboardingModule).toHaveBeenCalled();
      expect(mockNavigate).toHaveBeenCalledWith('/');
    });

    it('handles save with unchecked eDocs correctly', () => {
      renderWithContext(DOOTB_ONBOARDING_TYPE.GENERAL_ONBOARDING);
      
      const saveButton = screen.getByTestId('continue-setup-button');
      act(() => {
        saveButton.click();
      });

      expect(mockHandleSubmit).toHaveBeenCalledWith(DOOTB_GOB_STEPS.NEXT_BEST_ACTION_PAGE);
      expect(mockTrackingEventWrapper).toHaveBeenCalledWith(expect.objectContaining({
        details: expect.objectContaining({
          interaction: Interaction.CLICK,
          transactionActivities: Activities.GENERAL_ONBOARDING,
          element: expect.objectContaining({
            type: ElementType.BUTTON,
            name: ActionName.SAVE_AND_CONTINUE,
          }),
        }),
      }));
    });

    it('handles migration save with unchecked eDocs correctly', () => {
      renderWithContext(DOOTB_ONBOARDING_TYPE.MIGRATION_ONBOARDING);
      
      const saveButton = screen.getByTestId('continue-setup-button');
      act(() => {
        saveButton.click();
      });

      expect(exitOnboardingModule).toHaveBeenCalled();
      expect(mockNavigate).toHaveBeenCalledWith('/');
      expect(mockTrackingEventWrapper).toHaveBeenCalledWith(expect.objectContaining({
        details: expect.objectContaining({
          interaction: Interaction.CLICK,
          transactionComplete: true,
          transactionType: TransactionType.DOOTB_ONBOARDING,
          transactionActivities: Activities.MIGRATION_ONBOARDING,
        }),
      }));
    });

    it('resets form started state after completion', () => {
      renderWithContext(DOOTB_ONBOARDING_TYPE.GENERAL_ONBOARDING);

      // Start form
      act(() => {
        window.dispatchEvent(
          new CustomEvent('policy_corres_mgmt_mfe:checkbox_edocs', { 
            detail: { status: true } 
          })
        );
      });

      // Complete form
      act(() => {
        window.dispatchEvent(
          new CustomEvent('policy_corres_mgmt_mfe:save_edocs', {
            detail: { status: true, loadingStatus: false }
          })
        );
      });

      // Verify form started state was reset
      expect(screen.queryByTestId('continue-setup-button')).toHaveTextContent(
        'onboardingModule.page2Common.buttonSaveAndContinue'
      );
    });
  });
});
