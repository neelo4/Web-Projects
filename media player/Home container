import { ApolloProvider, ApolloClient, InMemoryCache } from '@apollo/client'; // Add this import

// Add this before the tests
const mockClient = new ApolloClient({
  cache: new InMemoryCache(),
  defaultOptions: {
    watchQuery: {
      fetchPolicy: 'no-cache',
      errorPolicy: 'all',
    },
    query: {
      fetchPolicy: 'no-cache',
      errorPolicy: 'all',
    },
  },
});

// Update the test case
test('renders success state- showing onboarding module', () => {
  useHomeDetailsMock.mockReturnValueOnce({
    loading: false,
    hasAuthenticationError: false,
    data: userData,
  });
  
  (showDootOnboardingModule as jest.Mock).mockReturnValue(true);
  
  render(
    <ApolloProvider client={mockClient}>
      <SiteTrackingContext.Provider value={mockSiteTrackingContext}>
        <HomeDetailsContext.Provider value={userData}>
          <HomeContainer />
        </HomeDetailsContext.Provider>
      </SiteTrackingContext.Provider>
    </ApolloProvider>
  );
  
  expect(screen.getByTestId('onboarding-module-page-greeting')).toBeInTheDocument();
});
