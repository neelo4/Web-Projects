test('renders success state- showing onboarding module', async () => {
  useHomeDetailsMock.mockReturnValueOnce({
    loading: false,
    hasAuthenticationError: false,
    data: userData,
  });

  (showDootbOnboardingModule as jest.Mock).mockReturnValue(true);

  render(
    <AppContext.Provider 
      value={{
        appState: {
          firstName: 'Tester',
          preferredName: '',
          isOnboardingAndEdocsCallCompleted: true,
          onboardingAndEdocsResult: {
            onboardingType: 'GENERAL_ONBOARDING'
          }
        },
        setAppState: jest.fn()
      }}
    >
      <ApolloProvider client={mockClient}>
        <SiteTrackingContext.Provider value={mockSiteTrackingContext}>
          <HomeDetailsContext.Provider value={userData}>
            <HomeContainer />
          </HomeDetailsContext.Provider>
        </SiteTrackingContext.Provider>
      </ApolloProvider>
    </AppContext.Provider>
  );

  const greeting = screen.getByTestId('onboarding-module-page-greeting');
  expect(greeting).toBeInTheDocument();
});
