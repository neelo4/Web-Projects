.noteContainer {
  @apply mt-4 border-t border-gray-200 pt-4;
}

.noteToggle {
  @apply w-full flex justify-between items-center bg-transparent border-none py-2 cursor-pointer text-gray-600;
}

.noteTitle {
  @apply text-sm font-medium;
}

.noteContent {
  @apply mt-2 py-2 text-sm text-gray-500 leading-relaxed;
}

.icon {
  @apply text-gray-500 text-xl;
}


///
const EligiblePoliciesNote = () => (
    <div className={styles.noteContainer}>
      <button
        onClick={toggleNote}
        className="w-full flex items-center justify-between px-2 py-3 hover:bg-gray-50 transition-colors rounded-md"
        aria-expanded={isNoteExpanded}
        aria-controls="eligiblePoliciesNote"
      >
        <div className="flex items-center gap-2">
          <i className={`${!isNoteExpanded ? 'i-plus-circle' : 'i-minus-circle'} text-gray-500 text-lg`} aria-hidden="true" />
          <span className={`text-sm text-gray-600 ${!isNoteExpanded ? 'underline' : ''}`}>
            {isNoteExpanded 
              ? t('pages.eDocsConversionView.noteOnEligiblePolicies.title')
              : t('pages.eDocsConversionView.noteOnEligiblePolicies.readNote')
            }
          </span>
        </div>
      </button>
      {isNoteExpanded && (
        <div id="eligiblePoliciesNote" className="mt-2 ml-8 text-sm text-gray-600 leading-relaxed">
          {t('pages.eDocsConversionView.noteOnEligiblePolicies.content')}
        </div>
      )}
    </div>
  );
