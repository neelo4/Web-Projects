import { screen } from '@testing-library/react';
import React from 'react';
import { render } from '../../../test-utils/renderWithProviders';
import { AppContext } from '../../AppContext';
import { Brand } from '../../models/Brand';
import OnboardingHeader from './OnboardingHeader';

jest.mock('@iag/identity/useAuth', () => () => ({ isAuthenticated: true }), { virtual: true });

const mockAppState = {
  appState: {
    fullName: 'Test',
    firstName: 'Tester',
  },
  setAppState: jest.fn(),
};

describe('test greeting', () => {
  beforeEach(() => {
    jest.clearAllMocks();
    window.__CLIENT_VARS__.brand = Brand.NRMA;
  });

  test('displays greeting', () => {
    render(
      <AppContext.Provider value={mockAppState}>
        <OnboardingHeader />
      </AppContext.Provider>,
      { bare: true },
    );

    // expect(screen.getByText('Hi Test Tester')).toBeInTheDocument();
    expect(screen.getByTestId('onboarding-module-page-greeting-message')).toBeInTheDocument();
    expect(screen.getByAltText('onboarding-image')).toBeInTheDocument();
  });

  test('renders General Onboarding when onboardingType is GOB', () => {
    render(
      <AppContext.Provider
        value={{
          ...mockAppState,
          appState: {
            ...mockAppState.appState,
            onboardingAndEdocsResult: {
              showOnboarding: true,
              onboardingType: 'GOB',
              showEdocsModal: false,
              eDocsStatus: true,
            },
          },
        }}
      >
        <OnboardingHeader />
      </AppContext.Provider>,
      { bare: true },
    );
    expect(screen.getByText('Letâ€™s quickly set up your account')).toBeInTheDocument();
  });

  test('renders Migration Onboarding when onboardingType is MOB', () => {
    render(
      <AppContext.Provider
        value={{
          ...mockAppState,
          appState: {
            ...mockAppState.appState,
            onboardingAndEdocsResult: {
              showOnboarding: true,
              onboardingType: 'MOB',
              showEdocsModal: false,
              eDocsStatus: true,
            },
          },
        }}
      >
        <OnboardingHeader />
      </AppContext.Provider>,
      { bare: true },
    );
    expect(screen.getByText('Welcome to your new Online Account')).toBeInTheDocument();
  });
});
