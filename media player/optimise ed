// 1. Preload the remote component earlier
const OnboardingEDocsConversionRemote = lazy(() => {
  return import('@iag/policy-correspondence-mfe/OnboardingModuleEDocsConversion').then(module => {
    // Add a small delay before returning to ensure proper loading
    return new Promise(resolve => {
      resolve(module);
    });
  });
});

const EDocsSection: React.FC<BrandDataProps & EdocsSectionProps> = ({
  tt,
  brand,
  partyId,
  primaryEmail,
  handleSettingLink,
  setIsEDocsRequestComplete,
  setIsResponseLoading,
  eDocsStatus,
}) => {
  const { appState } = useContext(AppContext);

  // 2. Memoize the event handler to prevent recreations
  const handleSaveEdocsEvent = React.useCallback((e: CustomEvent<{ status: boolean; loadingStatus: boolean }>) => {
    const responseStatus = e.detail.status;
    if (responseStatus !== undefined) {
      setIsResponseLoading(e.detail.loadingStatus);
      setIsEDocsRequestComplete(!e.detail.loadingStatus && (responseStatus === true || responseStatus === false));
    }
  }, [setIsResponseLoading, setIsEDocsRequestComplete]);

  // 3. Optimize event listener setup
  useEffect(() => {
    const eventName = 'policy_corres_mgmt_mfe:save_edocs';
    window.addEventListener(eventName, handleSaveEdocsEvent);
    
    // Preload the component on mount
    const preloadComponent = () => {
      import('@iag/policy-correspondence-mfe/OnboardingModuleEDocsConversion');
    };
    preloadComponent();

    return () => {
      window.removeEventListener(eventName, handleSaveEdocsEvent);
    };
  }, [handleSaveEdocsEvent]);

  return (
    <div data-testid="switch-to-edocs-section" className={`px-2 py-2 border border-${tt('constants.borderColor')}`}>
      <ErrorBoundary errorType={ErrorTypeCode.EdocsConversion}>
        <Suspense fallback={<Spinner className="left-1/2" />}>
          <OnboardingEDocsConversionRemote
            brand={brand}
            partyId={partyId}
            xIagContext={{ sessionId }}
            primaryEmail={primaryEmail}
            eDocsStatus={eDocsStatus}
            handleSettingLink={handleSettingLink}
          />
        </Suspense>
      </ErrorBoundary>
    </div>
  );
};

export default React.memo(connectIagBrand()(EDocsSection));
